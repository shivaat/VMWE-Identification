# -*- coding: utf-8 -*-
"""main_multi.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TPkIvWEcMM4QB3LqoR87V2B9p8TqQlP3
"""

#from google.colab import drive
#drive.mount("/content/gdrive/")

#path = "/content/gdrive/My Drive/Cross-Lingual VMWE/multi_task"
#import os
#os.chdir(path)

import numpy as np 
from preprocessing import Data 
from train_test import Train_Test 
from models.tag_models import Tagger 
from evaluation import labels2Parsemetsv

DEVorTEST = 'TEST' # "CROSS_VAL" or 'TEST' or 'DEV'
LANG_TR = "FA"
LANG_DEV = "FA"
LANG_TS = "FA"
MODEL = "model_withPOS_closed"
POS = True
W2V = False
DEP_ADJACENCY_GCN = 0
DEP_INFO = False    # This is for dumb usage of dependency information by concatenating head vector to the token vector.
EPOCHS = 100 
BATCH_SIZE = 16
DATAPATH = "../DATA/"
initial_weight=''


WV_DIR = ""
ELMO_PATH = ""

def run_model():
	# args: lang, train, dev, test, word2vec_dir, elmo_dir, model_name
	d = Data(LANG_TR, LANG_DEV, LANG_TS, DEVorTEST, WV_DIR, ELMO_PATH, MODEL, DEP_ADJACENCY_GCN, DEP_INFO, POS)
	d.load_data(DATAPATH)	 # This loads train, dev (if available), test (if available) and also word2vec and ELMo

	# args: max_length, n_poses, n_classes, initial_weight=''
	model = Tagger(d, initial_weight)  
	tagger = getattr(model, MODEL)() # choose the specified tagging model
	print(tagger)

	T = Train_Test(POS, W2V, MODEL, tagger, d, DEVorTEST)
	if DEVorTEST == "CROSS_VAL":
                T.cross_validation(EPOCHS, BATCH_SIZE, DATAPATH)
	else:                
                T.train(EPOCHS, BATCH_SIZE)
                T.test(DATAPATH)			# We give the Data_path to this function, just for it to return the evaluation for us

#1 run
run_model()